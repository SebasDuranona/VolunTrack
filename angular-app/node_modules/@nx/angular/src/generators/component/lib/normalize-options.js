"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.normalizeOptions = void 0;
const devkit_1 = require("@nx/devkit");
const artifact_name_and_directory_utils_1 = require("@nx/devkit/src/generators/artifact-name-and-directory-utils");
const selector_1 = require("../../utils/selector");
async function normalizeOptions(tree, options) {
    options.type ??= 'component';
    const { artifactName: name, directory, fileName, filePath, project: projectName, } = await (0, artifact_name_and_directory_utils_1.determineArtifactNameAndDirectoryOptions)(tree, {
        artifactType: 'component',
        callingGenerator: '@nx/angular:component',
        name: options.name,
        directory: options.directory ?? options.path,
        flat: options.flat,
        nameAndDirectoryFormat: options.nameAndDirectoryFormat,
        project: options.project,
        suffix: options.type ?? 'component',
    });
    const { className } = (0, devkit_1.names)(name);
    const { className: suffixClassName } = (0, devkit_1.names)(options.type);
    const symbolName = `${className}${suffixClassName}`;
    const { prefix, root, sourceRoot } = (0, devkit_1.readProjectConfiguration)(tree, projectName);
    const selector = options.selector ?? (0, selector_1.buildSelector)(name, options.prefix, prefix, 'fileName');
    (0, selector_1.validateHtmlSelector)(selector);
    return {
        ...options,
        name,
        projectName,
        changeDetection: options.changeDetection ?? 'Default',
        style: options.style ?? 'css',
        standalone: options.standalone ?? true,
        directory,
        fileName,
        filePath,
        symbolName,
        projectSourceRoot: sourceRoot,
        projectRoot: root,
        selector,
    };
}
exports.normalizeOptions = normalizeOptions;
