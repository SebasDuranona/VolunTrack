/**
 * Adapted from the original ng-packagr source.
 *
 * Changes made:
 * - Use our own function to get the TailwindCSS config path to support a
 * config at the root of the workspace.
 */
export declare enum CssUrl {
    inline = "inline",
    none = "none"
}
export declare class StylesheetProcessor {
    private readonly projectBasePath;
    private readonly basePath;
    private readonly cssUrl?;
    private readonly includePaths?;
    private readonly cacheDirectory?;
    private renderWorker;
    constructor(projectBasePath: string, basePath: string, cssUrl?: CssUrl, includePaths?: string[], cacheDirectory?: string | false);
    process({ filePath, content, }: {
        filePath: string;
        content: string;
    }): Promise<string>;
    /** Destory workers in pool. */
    destroy(): void;
    private createRenderWorker;
}
/**
 * This class is used when ng-packagr version is 17.2.0. The async `loadPostcssConfiguration` function
 * introduced in ng-packagr 17.2.0 causes a memory leak due to multiple workers being created. We must
 * keep this class to support any workspace that might be using ng-packagr 17.2.0 where that function
 * need to be awaited.
 */
export declare class AsyncStylesheetProcessor {
    private readonly projectBasePath;
    private readonly basePath;
    private readonly cssUrl?;
    private readonly includePaths?;
    private readonly cacheDirectory?;
    private renderWorker;
    constructor(projectBasePath: string, basePath: string, cssUrl?: CssUrl, includePaths?: string[], cacheDirectory?: string | false);
    process({ filePath, content, }: {
        filePath: string;
        content: string;
    }): Promise<string>;
    /** Destory workers in pool. */
    destroy(): void;
    private createRenderWorker;
}
