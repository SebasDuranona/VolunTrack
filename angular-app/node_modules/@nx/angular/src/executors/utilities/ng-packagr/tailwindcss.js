"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTailwindPostCssPlugin = exports.getTailwindConfigPath = exports.getTailwindSetup = void 0;
const devkit_1 = require("@nx/devkit");
const devkit_2 = require("@nx/devkit");
const fs_1 = require("fs");
const path_1 = require("path");
function getTailwindSetup(basePath, tailwindConfig) {
    let tailwindConfigPath = tailwindConfig;
    if (!tailwindConfigPath) {
        tailwindConfigPath = getTailwindConfigPath(basePath, devkit_2.workspaceRoot);
    }
    // Only load Tailwind CSS plugin if configuration file was found.
    if (!tailwindConfigPath) {
        return undefined;
    }
    let tailwindPackagePath;
    try {
        tailwindPackagePath = require.resolve('tailwindcss');
    }
    catch {
        const relativeTailwindConfigPath = (0, path_1.relative)(devkit_2.workspaceRoot, tailwindConfigPath);
        devkit_1.logger.warn(`Tailwind CSS configuration file found (${relativeTailwindConfigPath})` +
            ` but the 'tailwindcss' package is not installed.` +
            ` To enable Tailwind CSS, please install the 'tailwindcss' package.`);
        return undefined;
    }
    if (!tailwindPackagePath) {
        return undefined;
    }
    return { tailwindConfigPath, tailwindPackagePath };
}
exports.getTailwindSetup = getTailwindSetup;
function getTailwindConfigPath(projectRoot, workspaceRoot) {
    // valid tailwind config files https://github.com/tailwindlabs/tailwindcss/blob/master/src/util/resolveConfigPath.js#L4
    const tailwindConfigFiles = [
        'tailwind.config.js',
        'tailwind.config.cjs',
        'tailwind.config.mjs',
        'tailwind.config.ts',
    ];
    for (const basePath of [projectRoot, workspaceRoot]) {
        for (const configFile of tailwindConfigFiles) {
            const fullPath = (0, path_1.join)(basePath, configFile);
            if ((0, fs_1.existsSync)(fullPath)) {
                return fullPath;
            }
        }
    }
    return undefined;
}
exports.getTailwindConfigPath = getTailwindConfigPath;
function getTailwindPostCssPlugin({ tailwindConfigPath, tailwindPackagePath, }) {
    return require(tailwindPackagePath)({ config: tailwindConfigPath });
}
exports.getTailwindPostCssPlugin = getTailwindPostCssPlugin;
