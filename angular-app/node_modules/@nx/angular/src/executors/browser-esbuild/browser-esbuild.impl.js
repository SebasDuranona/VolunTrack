"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const devkit_1 = require("@nx/devkit");
const ngcli_adapter_1 = require("nx/src/adapter/ngcli-adapter");
const angular_version_utils_1 = require("../utilities/angular-version-utils");
const buildable_libs_1 = require("../utilities/buildable-libs");
const esbuild_extensions_1 = require("../utilities/esbuild-extensions");
async function* esbuildExecutor(options, context) {
    if (options.plugins) {
        const { major: angularMajorVersion, version: angularVersion } = (0, angular_version_utils_1.getInstalledAngularVersionInfo)();
        if (angularMajorVersion < 17) {
            throw new Error((0, devkit_1.stripIndents) `The "plugins" option is only supported in Angular >= 17.0.0. You are currently using "${angularVersion}".
        You can resolve this error by removing the "plugins" option or by migrating to Angular 17.0.0.`);
        }
    }
    options.buildLibsFromSource ??= true;
    const { buildLibsFromSource, plugins: pluginPaths, ...delegateExecutorOptions } = options;
    let dependencies;
    if (!buildLibsFromSource) {
        const { tsConfigPath, dependencies: foundDependencies } = (0, buildable_libs_1.createTmpTsConfigForBuildableLibs)(delegateExecutorOptions.tsConfig, context);
        dependencies = foundDependencies;
        delegateExecutorOptions.tsConfig = tsConfigPath;
    }
    const plugins = await (0, esbuild_extensions_1.loadPlugins)(pluginPaths, options.tsConfig);
    const { buildEsbuildBrowser } = await Promise.resolve().then(() => require('@angular-devkit/build-angular/src/builders/browser-esbuild/index'));
    const builderContext = await (0, ngcli_adapter_1.createBuilderContext)({
        builderName: 'browser-esbuild',
        description: 'Build a browser application',
        optionSchema: await Promise.resolve().then(() => require('@angular-devkit/build-angular/src/builders/browser-esbuild/schema.json')),
    }, context);
    return yield* buildEsbuildBrowser(delegateExecutorOptions, builderContext, 
    /* infrastructureSettings */ undefined, plugins);
}
exports.default = esbuildExecutor;
