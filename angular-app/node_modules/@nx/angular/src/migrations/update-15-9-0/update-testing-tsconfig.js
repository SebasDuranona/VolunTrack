"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateTestingTsconfigForJest = void 0;
const devkit_1 = require("@nx/devkit");
const executor_options_utils_1 = require("@nx/devkit/src/generators/executor-options-utils");
async function updateTestingTsconfigForJest(tree) {
    const graph = await (0, devkit_1.createProjectGraphAsync)();
    const projects = (0, devkit_1.getProjects)(tree);
    (0, executor_options_utils_1.forEachExecutorOptionsInGraph)(graph, '@nrwl/jest:jest', (options, projectName) => {
        const projectConfig = projects.get(projectName);
        if (!isJestPresetAngular(tree, options.jestConfig)) {
            return;
        }
        const tsconfigPath = (0, devkit_1.joinPathFragments)(projectConfig.root, 'tsconfig.spec.json');
        if (tree.exists(tsconfigPath)) {
            (0, devkit_1.updateJson)(tree, tsconfigPath, (json) => {
                json.compilerOptions ??= {};
                json.compilerOptions.target ??= 'es2016';
                return json;
            }, { expectComments: true, allowTrailingComma: true });
        }
    });
    await (0, devkit_1.formatFiles)(tree);
}
exports.updateTestingTsconfigForJest = updateTestingTsconfigForJest;
function isJestPresetAngular(tree, jestConfigPath) {
    if (jestConfigPath && tree.exists(jestConfigPath)) {
        const contents = tree.read(jestConfigPath, 'utf-8');
        return contents.includes('jest-preset-angular');
    }
    return false;
}
exports.default = updateTestingTsconfigForJest;
