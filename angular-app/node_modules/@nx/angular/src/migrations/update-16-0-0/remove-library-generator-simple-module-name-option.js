"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const devkit_1 = require("@nx/devkit");
async function removeLibraryGeneratorSimpleModuleNameOption(tree) {
    const nxJson = (0, devkit_1.readNxJson)(tree);
    // update global config
    const nxJsonUpdated = replaceSimpleModuleNameInConfig(nxJson);
    if (nxJsonUpdated) {
        (0, devkit_1.updateNxJson)(tree, nxJson);
    }
    // update project configs
    const projects = (0, devkit_1.getProjects)(tree);
    for (const [name, project] of projects) {
        const projectUpdated = replaceSimpleModuleNameInConfig(project);
        if (projectUpdated) {
            (0, devkit_1.updateProjectConfiguration)(tree, name, project);
        }
    }
    await (0, devkit_1.formatFiles)(tree);
}
exports.default = removeLibraryGeneratorSimpleModuleNameOption;
function replaceSimpleModuleNameInConfig(configObject) {
    if (!configObject?.generators) {
        return false;
    }
    let updated = false;
    if (configObject.generators['@nrwl/angular']?.['library']?.simpleModuleName) {
        configObject.generators['@nrwl/angular']['library'].simpleName ??=
            configObject.generators['@nrwl/angular']['library'].simpleModuleName;
        delete configObject.generators['@nrwl/angular']['library'].simpleModuleName;
        updated = true;
    }
    else if (configObject.generators['@nrwl/angular:library']?.simpleModuleName) {
        configObject.generators['@nrwl/angular:library'].simpleName ??=
            configObject.generators['@nrwl/angular:library'].simpleModuleName;
        delete configObject.generators['@nrwl/angular:library'].simpleModuleName;
        updated = true;
    }
    return updated;
}
