"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setupRootEsLint = void 0;
const devkit_1 = require("@nx/devkit");
const versions_1 = require("../../utils/versions");
const global_eslint_config_1 = require("../init/global-eslint-config");
const eslint_file_1 = require("../utils/eslint-file");
function setupRootEsLint(tree, options) {
    const rootEslintFile = (0, eslint_file_1.findEslintFile)(tree);
    if (rootEslintFile) {
        return () => { };
    }
    (0, devkit_1.writeJson)(tree, '.eslintrc.json', (0, global_eslint_config_1.getGlobalEsLintConfiguration)(options.unitTestRunner, options.rootProject));
    if (tree.exists('.eslintignore')) {
        let content = tree.read('.eslintignore', 'utf-8');
        if (!/^node_modules$/gm.test(content)) {
            content = `${content}\nnode_modules\n`;
            tree.write('.eslintignore', content);
        }
    }
    else {
        tree.write('.eslintignore', 'node_modules\n');
    }
    return !options.skipPackageJson
        ? (0, devkit_1.addDependenciesToPackageJson)(tree, {}, {
            '@nx/eslint-plugin': versions_1.nxVersion,
            '@typescript-eslint/parser': versions_1.typescriptESLintVersion,
            '@typescript-eslint/eslint-plugin': versions_1.typescriptESLintVersion,
            'eslint-config-prettier': versions_1.eslintConfigPrettierVersion,
        })
        : () => { };
}
exports.setupRootEsLint = setupRootEsLint;
