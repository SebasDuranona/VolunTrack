"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NxTsconfigPathsWebpackPlugin = void 0;
const path = require("path");
const tsconfig_paths_webpack_plugin_1 = require("tsconfig-paths-webpack-plugin");
const devkit_1 = require("@nx/devkit");
class NxTsconfigPathsWebpackPlugin {
    constructor(options) {
        this.options = options;
        if (!this.options.tsConfig)
            throw new Error(`Missing "tsConfig" option. Set this option in your Nx webpack plugin.`);
    }
    apply(compiler) {
        const extensions = new Set([
            ...['.ts', '.tsx', '.mjs', '.js', '.jsx'],
            ...(compiler.options?.resolve?.extensions ?? []),
        ]);
        compiler.options.resolve = {
            ...compiler.options.resolve,
            plugins: compiler.options.resolve?.plugins ?? [],
        };
        compiler.options.resolve.plugins.push(new tsconfig_paths_webpack_plugin_1.TsconfigPathsPlugin({
            configFile: !path.isAbsolute(this.options.tsConfig)
                ? path.join(devkit_1.workspaceRoot, this.options.tsConfig)
                : this.options.tsConfig,
            extensions: Array.from(extensions),
            mainFields: ['module', 'main'],
        }));
    }
}
exports.NxTsconfigPathsWebpackPlugin = NxTsconfigPathsWebpackPlugin;
